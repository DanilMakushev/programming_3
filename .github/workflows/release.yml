name: 'C++ CI'

on:
  push:
    branches: [main, feature/github_actions]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with: {submodules: true}
      
      - name: Install and Build
        run: |
          sudo apt update && sudo apt install libboost-test-dev -y
          cd lab1_actions
          cmake . -DPATCH_VERSION=${{ github.run_number }}
          cmake --build .
          ctest --output-on-failure
          cmake --build . --target package
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: linux-${{ github.run_number }}
          name: Linux Release ${{ github.run_number }}
          files: lab1_actions/helloworld-*.deb
        env: {GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}}

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with: {submodules: true}

      - name: Build with Boost
        shell: pwsh
        run: |
          # Установка Boost и сборка
          choco install boost-msvc-14.3 -y
          cd lab1_actions
          cmake -B build -DPATCH_VERSION=${{ github.run_number }}
          cmake --build build --config Release
          
          # Копирование DLL если найдена
          $dll = Get-ChildItem "C:\ProgramData\chocolatey\lib\boost-msvc-14.3" -Recurse -Filter "*test_framework*.dll" | Select-Object -First 1
          if ($dll) { Copy-Item $dll.FullName "build\Release\" }
          
          # Тесты и пакет
          ctest --test-dir build -C Release --output-on-failure
          cmake --build build --config Release --target package
          
          # Поиск пакета
          $package = Get-ChildItem -Path "build" -Recurse -Filter "helloworld*.exe" | Select-Object -First 1
          if ($package) { Copy-Item $package.FullName "helloworld-windows.exe" }

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: win-${{ github.run_number }}
          name: Windows Release ${{ github.run_number }}
          files: lab1_actions/helloworld-windows.exe
        env: {GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}}