name: 'C++ CI'

on:
  push:
    branches:
      - main
      - feature/github_actions

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install libboost-test-dev -y
      
      - name: Configure and Build
        run: |
          cd lab1_actions
          cmake . -DPATCH_VERSION=${{ github.run_number }}
          cmake --build .
          cmake --build . --target test
          cmake --build . --target package
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: linux-${{ github.run_number }}
          name: Linux Release ${{ github.run_number }}
          files: lab1_actions/helloworld-0.0.${{ github.run_number }}-Linux.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install Boost and Build
        shell: pwsh
        run: |
          # Установка Boost
          choco install boost-msvc-14.3 -y
          
          # Сборка проекта
          cd lab1_actions
          cmake -B build -DPATCH_VERSION=${{ github.run_number }}
          cmake --build build --config Release
          
          # Поиск и копирование DLL
          $dll = Get-ChildItem "C:\ProgramData\chocolatey\lib\boost-msvc-14.3" -Recurse -Filter "boost_unit_test_framework*.dll" | Select-Object -First 1
          if ($dll) {
              Copy-Item $dll.FullName -Destination "build\Release\"
              Write-Host "DLL copied: $($dll.FullName)"
          } else {
              Write-Host "DLL not found, tests may fail"
          }
          
          # Тесты
          cd build
          ctest -C Release --output-on-failure
          
          # Создание пакета
          cd ..
          cmake --build build --config Release --target package
          
          # Поиск пакета
          $package = Get-ChildItem -Path "build" -Recurse -Filter "helloworld*.exe" | Select-Object -First 1
          if ($package) {
              Copy-Item $package.FullName -Destination "helloworld-windows.exe"
          }

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: win-${{ github.run_number }}
          name: Windows Release ${{ github.run_number }}
          files: lab1_actions/helloworld-windows.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}