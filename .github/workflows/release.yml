name: 'C++ CI'

on:
  push:
    branches:
      - main
      - feature/github_actions

permissions:
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install libboost-test-dev -y
      
      - name: Configure and Build
        run: |
          cd lab1_actions
          cmake . -DPATCH_VERSION=${{ github.run_number }}
          cmake --build .
          ctest --output-on-failure
          cmake --build . --target package
      
      - name: Upload Release
        uses: actions/upload-artifact@v3
        with:
          name: linux-package
          path: lab1_actions/helloworld-*.deb

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install Boost and Build
        shell: pwsh
        run: |
          choco install boost-msvc-14.3 -y
          cd lab1_actions
          cmake -B build -DPATCH_VERSION=${{ github.run_number }}
          cmake --build build --config Release
          
          # Пробуем найти DLL, но не останавливаемся если не найдем
          $dll = Get-ChildItem "C:\ProgramData\chocolatey\lib\boost-msvc-14.3" -Recurse -Filter "boost_unit_test_framework*.dll" | Select-Object -First 1
          if ($dll) {
              Copy-Item $dll.FullName -Destination "build\Release\"
          }
          
          cd build
          ctest -C Release --output-on-failure
          cd ..
          cmake --build build --config Release --target package

      - name: Upload Release
        uses: actions/upload-artifact@v3
        with:
          name: windows-package
          path: |
            lab1_actions/helloworld-*.exe
            lab1_actions/build/helloworld-*.exe

  create-release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts
      
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: release-${{ github.run_number }}
          name: Release ${{ github.run_number }}
          artifacts: ./artifacts/**/*
          token: ${{ secrets.GITHUB_TOKEN }}